head(scraped_data)
url <- 'https://www.baseball-reference.com/awards/hof_2023.shtml'
html <- read_html(url)
tables <- html %>% html_table(fill=TRUE)
tables %>% str()
str(tables)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$yearID <- as.integer(scraped_data$yearID)
scraped_data$ballots <- as.integer(scraped_data$ballots)
scraped_data$needed <- as.integer(scraped_data$needed)
scraped_data$votes <- as.integer(scraped_data$votes)
scraped_data$inducted <- as.character(scraped_data$inducted)
scraped_data$category <- as.character(scraped_data$category)
scraped_data$needed_note <- as.character(scraped_data$needed_note)
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data$yearID <- 2023
scraped_data$votedBy = 'BBWAA'
scraped_data$category='Player'
head(scraped_data)
url <- 'https://www.baseball-reference.com/awards/hof_2023.shtml'
html <- read_html(url)
tables <- html %>% html_table(fill=TRUE)
tables %>% str()
str(tables)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$yearID <- as.integer(scraped_data$yearID)
scraped_data$ballots <- as.integer(scraped_data$ballots)
scraped_data$needed <- as.integer(scraped_data$needed)
scraped_data$votes <- as.integer(scraped_data$votes)
scraped_data$inducted <- as.character(scraped_data$inducted)
scraped_data$category <- as.character(scraped_data$category)
scraped_data$needed_note <- as.character(scraped_data$needed_note)
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data$yearID <- 2023
scraped_data$votedBy = 'BBWAA'
scraped_data$category='Player'
scraped_data$needed <- 170
head(scraped_data)
url <- 'https://www.baseball-reference.com/awards/hof_2023.shtml'
html <- read_html(url)
tables <- html %>% html_table(fill=TRUE)
tables %>% str()
str(tables)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$yearID <- as.integer(scraped_data$yearID)
scraped_data$ballots <- as.integer(scraped_data$ballots)
scraped_data$needed <- as.integer(scraped_data$needed)
scraped_data$votes <- as.integer(scraped_data$votes)
scraped_data$inducted <- as.character(scraped_data$inducted)
scraped_data$category <- as.character(scraped_data$category)
scraped_data$needed_note <- as.character(scraped_data$needed_note)
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data$yearID <- 2023
scraped_data$votedBy = 'BBWAA'
scraped_data$category='Player'
scraped_data$needed <- 170
scraped_data$needed_note=NA
head(scraped_data)
url <- 'https://www.baseball-reference.com/awards/hof_2023.shtml'
html <- read_html(url)
tables <- html %>% html_table(fill=TRUE)
tables %>% str()
str(tables)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$yearID <- as.integer(scraped_data$yearID)
scraped_data$ballots <- as.integer(scraped_data$ballots)
scraped_data$needed <- as.integer(scraped_data$needed)
scraped_data$votes <- as.integer(scraped_data$votes)
scraped_data$inducted <- as.character(scraped_data$inducted)
scraped_data$category <- as.character(scraped_data$category)
scraped_data$needed_note <- as.character(scraped_data$needed_note)
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data$yearID <- 2023
scraped_data$votedBy = 'BBWAA'
scraped_data$category='Player'
scraped_data$needed <- 170
scraped_data$needed_note=NA
scraped_data=scraped_data[:9]
url <- 'https://www.baseball-reference.com/awards/hof_2023.shtml'
html <- read_html(url)
tables <- html %>% html_table(fill=TRUE)
tables %>% str()
str(tables)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$yearID <- as.integer(scraped_data$yearID)
scraped_data$ballots <- as.integer(scraped_data$ballots)
scraped_data$needed <- as.integer(scraped_data$needed)
scraped_data$votes <- as.integer(scraped_data$votes)
scraped_data$inducted <- as.character(scraped_data$inducted)
scraped_data$category <- as.character(scraped_data$category)
scraped_data$needed_note <- as.character(scraped_data$needed_note)
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data$yearID <- 2023
scraped_data$votedBy = 'BBWAA'
scraped_data$category='Player'
scraped_data$needed <- 170
scraped_data$needed_note=NA
scraped_data <- scraped_data[, 1:9]
head(scraped_data)
library(rvest)
library(Lahmn)
library(rvest)
library(Lahman)
HallOfFame
url <- 'https://www.baseball-reference.com/awards/hof_2023.shtml'
html <- read_html(url)
tables <- html %>% html_table(fill=TRUE)
tables %>% str()
str(tables)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$yearID <- as.integer(scraped_data$yearID)
scraped_data$ballots <- as.integer(scraped_data$ballots)
scraped_data$needed <- as.integer(scraped_data$needed)
scraped_data$votes <- as.integer(scraped_data$votes)
scraped_data$inducted <- as.character(scraped_data$inducted)
scraped_data$category <- as.character(scraped_data$category)
scraped_data$needed_note <- as.character(scraped_data$needed_note)
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data$yearID <- 2023
scraped_data$needed_note=NA
scraped_data <- scraped_data[, 1:9]
head(scraped_data)
library(rvest)
library(Lahman)
head(HallOfFame)
url <- 'https://www.baseball-reference.com/awards/hof_2023.shtml'
html <- read_html(url)
tables <- html %>% html_table(fill=TRUE)
tables %>% str()
str(tables)
scraped_data <- tables[[1]]  # Adjust the index if needed
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$yearID <- as.integer(scraped_data$yearID)
scraped_data$ballots <- as.integer(scraped_data$ballots)
scraped_data$needed <- as.integer(scraped_data$needed)
scraped_data$votes <- as.integer(scraped_data$votes)
scraped_data$inducted <- as.character(scraped_data$inducted)
scraped_data$category <- as.character(scraped_data$category)
scraped_data$needed_note <- as.character(scraped_data$needed_note)
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data$yearID <- 2023
scraped_data$needed_note=NA
scraped_data <- scraped_data[, 1:9]
head(scraped_data)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data$yearID <- 2023
scraped_data$needed_note=NA
scraped_data <- scraped_data[, 1:9]
head(scraped_data)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data <- scraped_data %>% mutate(
yearID = 2023,
votedBy = "BBWAA",
ballots = 389,
needed = 292,
inducted = ifelse(Votes>=292, "Y", "N"),
category = NA, # don't know yet
needed_note = NA # not sure what would go here
) %>% rename(
votes = Votes
) %>% select(-Percent, -`Years on ballot`)
library(rvest)
library(Lahman)
library(dplyr)
head(HallOfFame)
library(rvest)
library(Lahman)
library(dplyr)
library(tidyverse)
head(HallOfFame)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data <- scraped_data %>% mutate(
yearID = 2023,
votedBy = "BBWAA",
ballots = 389,
needed = 292,
inducted = ifelse(Votes>=292, "Y", "N"),
category = NA, # don't know yet
needed_note = NA # not sure what would go here
) %>% rename(
votes = Votes
) %>% select(-Percent, -`Years on ballot`)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data <- scraped_data[, 1:9]
head(scraped_data)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data <- scraped_data[, 1:9]
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$needed_note[scraped_data$needed_note == ""] <- NA
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data <- scraped_data %>% mutate(
yearID = 2023,
votedBy = "BBWAA",
ballots = 389,
needed = 292,
inducted = ifelse(Votes>=292, "Y", "N"),
needed_note = NA
)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
# Assuming 'scraped_data' is your data frame
scraped_data <- scraped_data %>% mutate(
yearID = 2023,
votedBy = "BBWAA",
ballots = 389,
needed = 292,
inducted = ifelse(votes >= 292, "Y", "N"),  # Assuming 'votes' is the correct column name
needed_note = NA
)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data <- scraped_data %>% mutate(
yearID = 2023,
votedBy = "BBWAA",
ballots = 389,
needed = 292,
inducted = ifelse(votes >= 292, "Y", "N"),  # Assuming 'votes' is the correct column name
needed_note = NA
%>% rename(
votes = Votes
)
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data <- scraped_data %>% mutate(
yearID = 2023,
votedBy = "BBWAA",
ballots = 389,
needed = 292,
inducted = ifelse(votes >= 292, "Y", "N"),  # Assuming 'votes' is the correct column name
needed_note = NA
%>% rename(
votes = Votes)
)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data <- scraped_data %>% mutate(
yearID = 2023,
votedBy = "BBWAA"
)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$playerID=scraped_data$yearID
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data
url <- 'https://www.baseball-reference.com/awards/hof_2023.shtml'
html <- read_html(url)
tables <- html %>% html_table(fill=TRUE)
tables %>% str()
str(tables)
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data$category='Player'
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data$category='Player'
scraped_data$needed_note=NA
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data$category='Player'
scraped_data$needed_note=NA
scraped_data <- scraped_data[, 1:9]
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data$category='Player'
scraped_data$needed_note=NA
scraped_data$votedBy='BBWAA'
scraped_data <- scraped_data[, 1:9]
scraped_data
scraped_data[-1,]
Lahman::People
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data$category='Player'
scraped_data$needed_note=NA
scraped_data$votedBy='BBWAA'
scraped_data$ballots
scraped_data <- scraped_data[, 1:9]
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data=scraped_data[-1]
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data$category='Player'
scraped_data$needed_note=NA
scraped_data$votedBy='BBWAA'
scraped_data$ballots
scraped_data <- scraped_data[, 1:9]
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data=scraped_data[-1]
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data$category='Player'
scraped_data$needed_note=NA
scraped_data$votedBy='BBWAA'
scraped_data$ballots=389
scraped_data <- scraped_data[, 1:9]
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data=scraped_data[-1,]
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data$category='Player'
scraped_data$needed_note=NA
scraped_data$votedBy='BBWAA'
scraped_data$ballots=389
scraped_data <- scraped_data[, 1:9]
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data=scraped_data[-1,]
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data$category='Player'
scraped_data$needed_note=NA
scraped_data$votedBy='BBWAA'
scraped_data$ballots=389
scraped_data$needed=292
scraped_data <- scraped_data[, 1:9]
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data=scraped_data[-1,]
scraped_data$votes=scraped_data$ballots
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data$category='Player'
scraped_data$needed_note=NA
scraped_data$votedBy='BBWAA'
scraped_data$ballots=389
scraped_data$needed=292
scraped_data <- scraped_data[, 1:9]
scraped_data
scraped_data <- tables[[1]]  # Adjust the index if needed
colnames(scraped_data) <- c("playerID", "yearID", "votedBy", "ballots", "needed", "votes", "inducted", "category", "needed_note")
scraped_data=scraped_data[-1,]
scraped_data$votes=scraped_data$ballots
scraped_data$playerID=scraped_data$yearID
scraped_data$yearID=2023
scraped_data$category='Player'
scraped_data$needed_note=NA
scraped_data$votedBy='BBWAA'
scraped_data$ballots=389
scraped_data$needed=292
scraped_data$inducted <- ifelse(scraped_data$votes > scraped_data$needed, "Y", "N")
scraped_data <- scraped_data[, 1:9]
scraped_data
people_data <- Lahman::People
people_data <- Lahman::People
str(people_data)
people_data <- Lahman::People
first_name=scraped_data[1]
first_name
people_data <- Lahman::People
# Assuming 'scraped_data' is your data frame and 'first_name' is a column in 'scraped_data'
# Extract the first name from the 'first_name' column
first_name <- strsplit(as.character(scraped_data$first_name), " ")[[1]][1]
people_data <- Lahman::People
first_name=scraped_data[1]
first_name
people_data <- Lahman::People
first_name=scraped_data[1].split(" ")
people_data <- Lahman::People
# Extract the first name from the first element of the 'first_name' column
first_name <- strsplit(as.character(scraped_data$playerID[1]), " ")[[1]][1]
# View the extracted first name
print(first_name)
people_data <- Lahman::People
# Assuming 'scraped_data' is your data frame and 'playerID' is a column in 'scraped_data'
# Extract the first names from all elements of the 'playerID' column and store in a list
first_names_list <- lapply(strsplit(as.character(scraped_data$playerID), " "), function(x) x[1])
# View the extracted first names list
print(first_names_list)
# Load necessary libraries
library(Lahman)
library(dplyr)
library(stringdist)
install.packages("stringdist")
# Load necessary libraries
library(Lahman)
library(dplyr)
library(stringdist)
# Fetch the People data frame from Lahman package
people_data <- Lahman::People
# Clean and preprocess the scraped_data and People data frames
scraped_data_clean <- scraped_data %>%
mutate(full_name = paste(first_name, last_name, sep = " ")) %>%
mutate(full_name = tolower(trimws(full_name)))
# Load necessary libraries
library(Lahman)
library(dplyr)
library(stringdist)
# Fetch the People data frame from Lahman package
people_data <- Lahman::People
people_data <- Lahman::People
people_data <- Lahman::People
people_data <- Lahman::People
str(people_data)
people_data <- Lahman::People
first=scraped_data[1]
people_data <- Lahman::People
first=scraped_data[1]
first
people_data <- Lahman::People
first_name=scraped_data[1]
first
people_data <- Lahman::People
first_name=scraped_data[1]
first_name
people_data <- Lahman::People
first_names_list <- lapply(strsplit(as.character(scraped_data$playerID), " "), function(x) x[1])
# View the extracted first names list
print(first_names_list)
people_data <- Lahman::People
first_names_list <- lapply(strsplit(as.character(scraped_data$playerID), " "), function(x) x[1])
first_names_list
people_data <- Lahman::People
# Extract the first names from all elements of the 'playerID' column and store in a list
first_names_list <- lapply(strsplit(as.character(scraped_data$playerID), " "), function(x) x[1])
# Extract the last names from all elements of the 'playerID' column and store in a list
last_names_list <- lapply(strsplit(as.character(scraped_data$playerID), " "), function(x) tail(x, 1))
# View the extracted first names list
print(first_names_list)
# View the extracted last names list
print(last_names_list)
people_data <- Lahman::People
library(dplyr)
# Assuming 'scraped_data' is your data frame and 'playerID' contains full names in the format "first_name last_name"
# Split 'playerID' column into 'first_name' and 'last_name' columns
scraped_data_split <- scraped_data %>%
separate(playerID, into = c("first_name", "last_name"), sep = " ")
# Convert names to lowercase and trim whitespace
scraped_data_split <- scraped_data_split %>%
mutate(first_name = tolower(trimws(first_name)),
last_name = tolower(trimws(last_name)))
# Match first names and last names with People dataset
matches <- Lahman::People %>%
filter(tolower(trimws(nameFirst)) %in% scraped_data_split$first_name &
tolower(trimws(nameLast)) %in% scraped_data_split$last_name)
# Merge matched data with scraped_data to add playerID to scraped_data
scraped_data_with_id <- scraped_data_split %>%
left_join(matches, by = c("first_name" = "nameFirst", "last_name" = "nameLast")) %>%
select(-c(first_name, last_name))  # Remove intermediate columns
# View scraped_data_with_id with playerID matched from People data
print(scraped_data_with_id)
people_data <- Lahman::People
library(dplyr)
# Split 'playerID' column into 'first_name' and 'last_name' columns
scraped_data_split <- scraped_data %>%
separate(playerID, into = c("first_name", "last_name"), sep = " ")
people_data <- Lahman::People
library(dplyr)
# Split 'playerID' column into 'first_name' and 'last_name' columns
scraped_data_split <- scraped_data %>%
separate(playerID, into = c("first_name", "last_name"), sep = " ")
scraped_data_split
people_data <- Lahman::People
library(dplyr)
# Split 'playerID' column into 'first_name' and 'last_name' columns
scraped_data <- scraped_data %>%
separate(playerID, into = c("first_name", "last_name"), sep = " ")
scraped_data
